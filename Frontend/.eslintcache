[{"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/App.js":"1","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/Common/notfound.js":"2","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/coursecard.js":"3","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/ActionProvider.js":"4","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/home.js":"5","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/signupform.js":"6","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/signup.js":"7","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/forgotpwform.js":"8","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/MessageParser.js":"9","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/login.js":"10","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/forms/addcourseform.js":"11","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/loginform.js":"12","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/index.js":"13"},{"size":1026,"mtime":1611483763496,"results":"14","hashOfConfig":"15"},{"size":839,"mtime":1611477171494,"results":"16","hashOfConfig":"15"},{"size":2608,"mtime":1611483763500,"results":"17","hashOfConfig":"15"},{"size":5586,"mtime":1611506659049,"results":"18","hashOfConfig":"15"},{"size":3756,"mtime":1611483763502,"results":"19","hashOfConfig":"15"},{"size":9321,"mtime":1611477171496,"results":"20","hashOfConfig":"15"},{"size":1646,"mtime":1611477171620,"results":"21","hashOfConfig":"15"},{"size":1764,"mtime":1611477171496,"results":"22","hashOfConfig":"15"},{"size":393,"mtime":1611483763498,"results":"23","hashOfConfig":"15"},{"size":3028,"mtime":1611477171620,"results":"24","hashOfConfig":"15"},{"size":4954,"mtime":1611503784652,"results":"25","hashOfConfig":"15"},{"size":4629,"mtime":1611483763497,"results":"26","hashOfConfig":"15"},{"size":700,"mtime":1611483763533,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"7n7si7",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/App.js",["63"],"import './App.css';\nimport Login from './EntryPage/login.js'\nimport Signup from './EntryPage/signup.js'\nimport ForgotPassword from './EntryPage/forgotpassword.js'\nimport { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './HomePage/home.js'\nimport NotFound from './Common/notfound.js'\nimport Dashboard from './HomePage/dashboard.js'\nimport Chatbot from './HomePage/chatbot.js'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route path={[\"/\",\"/homepage\",\"/home\"]} exact component={Home} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/signup\" exact component= {Signup} />\n            <Route path=\"/forgotpassword\" exact component={ForgotPassword} />\n            <Route path=\"/chatbot\" exact component={Chatbot} />\n            <Route component={NotFound} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n\n    );\n  }\n  \n}\n\n\n",["64","65"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/Common/notfound.js",[],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/coursecard.js",["66","67","68"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/ActionProvider.js",["69","70","71"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/home.js",["72","73","74","75"],"import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport SideBar from './sidebar.js';\nimport { Layout } from 'antd';\nimport './static/style.css';\nimport Dashboard from './dashboard.js';\nimport { Route } from \"react-router-dom\";\nimport ChatBot from './chatbot.js';\n\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            userEmail: localStorage.getItem(\"userEmail\"),\n            userRole: localStorage.getItem(\"userRole\")\n        };\n    }\n    \n    render() {\n        console.log(this.state.courses);\n        const { Header, Content, Footer, Sider } = Layout;\n        if (localStorage.getItem(\"isLoggedIn\") === \"false\") {\n            return <Redirect to=\"/login\" />\n        } else {\n            let pageHeading = null;\n            let page = null;\n            if (window.location.pathname.includes(\"dashboard\") || window.location.pathname.includes(\"home\")) {\n                console.log(\"Dashboard\");\n                pageHeading = \"Dashboard\";\n                page = (\n                    <Dashboard/>\n                );\n            } else if (window.location.pathname.includes(\"profile\")) {\n                pageHeading = \"Profile\";\n            } else if (\n                window.location.pathname.includes(\"create\") ||\n                window.location.pathname.includes(\"enroll\") ||\n                window.location.pathname.includes(\"courses\")\n            ) {\n                pageHeading = \"Courses\";\n            } else if (window.location.pathname.includes(\"inbox\")) {\n                pageHeading = \"Inbox\";\n            } else if (window.location.pathname.includes(\"chatbox\")) {\n                console.log(\"Chatbot\");\n                pageHeading = \"Chatbot\";\n                page = (\n                    <ChatBot />\n                );\n            }\n         \n            return (\n                <React.Fragment>\n                    <Layout>\n                        <SideBar/>\n                        <div className=\"main-layout\">\n                            <header\n                                style={{\n                                    background: \"#fff\",\n                                    textAlign: \"left\",\n                                    marginLeft: 150,\n                                    borderBottom: \"1px solid #e9e9e9\",\n                                    fontWeight: 400\n                                }}\n                                >\n                                <div className=\"px-4 py-2\">\n                                    <font size=\"5\" color=\"grey\">\n                                        {pageHeading}\n                                    </font>\n                                </div>\n                            </header>\n                            <Content>\n                            \n                                <Layout>\n                                    {page}\n                                </Layout>\n                            </Content>\n                        \n                            <footer\n                                style={{\n                                    background: \"#fff\",\n                                    textAlign: \"center\",\n                                    marginLeft: 150,\n                                    borderTop: \"1px solid #e9e9e9\"\n                                }}\n                            >\n                            \n                            <font size=\"4\" color=\"red\">\n                                RMIT Instructure \n                            </font>\n                            </footer>\n                        </div>\n                    </Layout>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\n\n\n\n",["76","77"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/signupform.js",[],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/signup.js",[],["78","79"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/forgotpwform.js",[],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/MessageParser.js",[],["80","81"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/login.js",[],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/HomePage/forms/addcourseform.js",["82","83","84","85","86"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nexport default function AddCourseForm() {\n    const courseEndPoint = \"http://localhost:8080/course\"\n    const { register, handleSubmit, watch, errors, getValues } = useForm();\n    const [ favoriteSubject, setFavoriteSubject ] = useState(null);\n\n\n    const createCourse = (courseInfo) => {\n        fetch(courseEndPoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(courseInfo)\n        }).then(data => data.json())\n    }\n\n\n    const onSubmit = (data) => {\n        const courseInfo = {name: data.courseName, courseCode: data.code, field: data.field}\n\n        createCourse(courseInfo);\n        window.location.reload();\n    }\n\n    const onError = (errors) => {\n        console.log(errors);\n       \n    }\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit, onError)} noValidate>\n                <div className=\"form-group\">\n                    <div>\n                        <label htmlFor=\"courseName\" className=\"sr-only\">Course Name</label>\n                        <input  \n                            style={{ border: errors.courseName ? '1px solid red' : '' }}\n                            type=\"name\" \n                            name=\"courseName\"\n                            id=\"courseName\" \n                            className=\"form-control\" \n                            placeholder=\"Course Name\"\n                            autoFocus={true}\n                            ref={register({ \n                                required: true,\n                                validate: {\n                                    validLength: value => value.length >= 4 && value.length < 30\n                                }\n                            })}\n                        >\n                        </input>\n                    </div>\n                    {errors.courseName && errors.courseName.type ===\"required\" && <p className=\"input-error\">* This field is required</p>}\n                    {errors.courseName && errors.courseName.type ===\"validLength\" && <p className=\"input-error\">* Length must be from 4-30 characters</p>}\n                </div>\n                <div className=\"form-group\">\n                    <div>\n                        <label htmlFor=\"code\" className=\"sr-only\">Course Code</label>\n                        <input  \n                            style={{ border: errors.code ? '1px solid red' : '' }}\n                            type=\"text\" \n                            name=\"code\"\n                            id=\"code\" \n                            className=\"form-control\" \n                            placeholder=\"Course Code\"\n                            autoComplete=\"none\"\n                            ref={register({ \n                                required: true,\n                                validate: {\n                                    validLength: value => value.length >= 4 && value.length < 30\n                                }\n                            })}\n                        >\n                        </input>\n                    </div>\n                    {errors.code && errors.code.type ===\"required\" && <p className=\"input-error\">* This field is required</p>}\n                    {errors.code && errors.code.type ===\"validate\" && <p className=\"input-error\">* Length must be from 4-30 characters</p>}\n\n                </div>\n                <div className=\"form-group mb-4\">\n                    <div>\n                        <label htmlFor=\"field\" className=\"sr-only\">Course Field</label>\n                        <input \n                            style={{ border: errors.field ? '1px solid red' : '' }}\n                            type=\"text\" \n                            name=\"field\" \n                            id=\"field\" \n                            className=\"form-control\" \n                            placeholder=\"Course Field\"\n                            ref={register({ \n                                required: true, \n                                validate: {\n                                    validLength: value => value.length >= 4 && value.length < 30\n                                }\n                            })}\n                        >\n                        </input>\n                    </div>\n                    {errors.field && errors.field.type === \"required\" && <p className=\"input-error\">* This field is required</p>}\n                    {errors.field && errors.field.type === \"validLength\" && <p className=\"input-error\"> * Length must be from 4-30 characters</p>}\n                </div>\n                \n                <input name=\"signup\" id=\"signup\" style={{marginTop: \"30px\"}}className=\"btn btn-block create-btn mb-4\" type=\"submit\" value=\"Create\"></input>\n            </form>\n        </div>\n    );\n}\n","/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/EntryPage/forms/loginform.js",["87"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport _default from 'antd/lib/checkbox/Group';\n\n\nvar bcrypt = require('bcryptjs');\n\nexport default function LoginForm() {\n    const { register, handleSubmit, errors } = useForm();\n    const userEndPoint = 'http://localhost:8080/user';\n    const courseEndPoint = 'http://localhost:8080/course';\n    const history = useHistory();\n\n    const getAvailableCourses = () => {\n        fetch(courseEndPoint)\n            .then(response => response.json())\n            .then(courseList => {\n                if (courseList.length > 0) {\n                    console.log(courseList);\n                    localStorage.setItem(\"courses\", JSON.stringify(courseList));\n                } else {\n                    localStorage.setItem(\"courses\", []);\n                }\n            })\n    }\n    const checkValidUser = (email, password ) => {\n        fetch(userEndPoint + \"/email/\" + email)\n            .then(response => response.json())\n            .then(data => {\n                \n                if ((email === data.email) && (bcrypt.compareSync(password, data.password))) {\n                    localStorage.setItem(\"isLoggedIn\", \"true\");\n                    localStorage.setItem(\"userEmail\", email);\n                    localStorage.setItem(\"userRole\", data.role);\n                    getAvailableCourses();\n                    \n                    history.push({\n                        pathname: \"/homepage\"\n                    });\n                   \n                } else {\n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Bad Credentials',\n                        text: 'Please check your email or password again!',\n                    })\n                }\n                \n            })\n            .catch(() => {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Bad Credentials',\n                    text: 'Please check your email or password again!',\n                })\n            });\n    }\n\n    const onSubmit = user => {\n        checkValidUser(user.email, user.password);\n    }\n\n    return (\n        <div>\n            <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-group\">\n                    <div>\n                        <label htmlFor=\"email\" className=\"sr-only\">Email</label>\n                        <input  \n                            style={{ border: errors.email ? '1px solid red' : '' }}\n                            type=\"email\" \n                            name=\"email\"\n                            id=\"email\" \n                            className=\"form-control\" \n                            placeholder=\"Email address\"\n                            autoComplete=\"none\"\n                            autoCorrect=\"none\"\n                            autoFocus={true}\n                            ref={register({ \n                                required: true,\n                                pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                            })}\n                        >\n                        </input>\n                    </div>\n                    {errors.email && errors.email.type ===\"required\" && <p className=\"input-error\">* This field is required</p>}\n                    {errors.email && errors.email.type ===\"pattern\" && <p className=\"input-error\">* Your email does not meed the valid format</p>}\n                </div>\n                <div className=\"form-group mb-4\">\n                    <div>\n                        <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n                        <input \n                            style={{ border: errors.password ? '1px solid red' : '' }}\n                            type=\"password\" \n                            name=\"password\" \n                            id=\"password\" \n                            className=\"form-control\" \n                            placeholder=\"Password\"\n                            ref={register({ required: true})}\n                        >\n                        </input>\n                    </div>\n                    {errors.password && <p className=\"input-error\">* This field is required</p>}\n                </div>\n                <input name=\"login\" id=\"login\" className=\"btn btn-block login-btn mb-4 hvr-grow\" type=\"submit\" value=\"Login\"></input>\n            </form>\n        </div>\n    );\n}\n\n\n\n\n\n",["88","89"],"/Users/nguyenkhangduy/Desktop/Architecture and Design/Git Final Project/Architecture_webservice_system/Frontend/src/index.js",[],{"ruleId":"90","severity":1,"message":"91","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":17},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":57,"column":16,"nodeType":"101","endLine":57,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":59,"column":11,"nodeType":"101","endLine":59,"endColumn":23},{"ruleId":"90","severity":1,"message":"104","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"105","line":26,"column":13,"nodeType":"92","messageId":"93","endLine":26,"endColumn":17},{"ruleId":"90","severity":1,"message":"106","line":30,"column":13,"nodeType":"92","messageId":"93","endLine":30,"endColumn":20},{"ruleId":"90","severity":1,"message":"98","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":15},{"ruleId":"90","severity":1,"message":"107","line":23,"column":17,"nodeType":"92","messageId":"93","endLine":23,"endColumn":23},{"ruleId":"90","severity":1,"message":"108","line":23,"column":34,"nodeType":"92","messageId":"93","endLine":23,"endColumn":40},{"ruleId":"90","severity":1,"message":"109","line":23,"column":42,"nodeType":"92","messageId":"93","endLine":23,"endColumn":47},{"ruleId":"94","replacedBy":"110"},{"ruleId":"96","replacedBy":"111"},{"ruleId":"94","replacedBy":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"94","replacedBy":"114"},{"ruleId":"96","replacedBy":"115"},{"ruleId":"90","severity":1,"message":"116","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},{"ruleId":"90","severity":1,"message":"117","line":7,"column":37,"nodeType":"92","messageId":"93","endLine":7,"endColumn":42},{"ruleId":"90","severity":1,"message":"118","line":7,"column":52,"nodeType":"92","messageId":"93","endLine":7,"endColumn":61},{"ruleId":"90","severity":1,"message":"119","line":8,"column":13,"nodeType":"92","messageId":"93","endLine":8,"endColumn":28},{"ruleId":"90","severity":1,"message":"120","line":8,"column":30,"nodeType":"92","messageId":"93","endLine":8,"endColumn":48},{"ruleId":"90","severity":1,"message":"121","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":16},{"ruleId":"94","replacedBy":"122"},{"ruleId":"96","replacedBy":"123"},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'dict' is assigned a value but never used.","'counter' is assigned a value but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.",["124"],["125"],["124"],["125"],["124"],["125"],"'useHistory' is defined but never used.","'watch' is assigned a value but never used.","'getValues' is assigned a value but never used.","'favoriteSubject' is assigned a value but never used.","'setFavoriteSubject' is assigned a value but never used.","'_default' is defined but never used.",["124"],["125"],"no-global-assign","no-unsafe-negation"]