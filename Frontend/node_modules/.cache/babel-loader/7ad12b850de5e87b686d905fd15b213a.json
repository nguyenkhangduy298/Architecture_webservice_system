{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/quantran/Desktop/Architecture_webservice_system/Frontend/src/Login/forms/signupform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport Select from 'react-select';\nimport { useForm } from 'react-hook-form';\nconst options = [{\n  value: 'Computer Science',\n  label: 'Computer Science'\n}, {\n  value: 'Engineering',\n  label: 'Engineering'\n}, {\n  value: 'Design',\n  label: 'Design'\n}, {\n  value: 'Professional Communication',\n  label: 'Professional Communication'\n}, {\n  value: 'Fashion',\n  label: 'Fashion'\n}, {\n  value: 'International Business',\n  label: 'International Business'\n}, {\n  value: 'Human Resources',\n  label: 'Human Resources'\n}];\nconst styles = {\n  option: (provided, state) => ({ ...provided,\n    color: state.isSelected ? 'white' : 'grey',\n    backgroundColor: state.isSelected ? 'rgb(30,30,46)' : 'white',\n    \"&:hover\": {\n      backgroundColor: '#d3d3d3'\n    }\n  }),\n  singleValue: provided => {\n    return { ...provided,\n      marginLeft: '15px',\n      fontSize: 14,\n      fontFamily: 'Poppins'\n    };\n  },\n  placeholder: provided => {\n    return { ...provided,\n      color: '#919aa3',\n      fontWeight: \"bold\",\n      fontSize: 14,\n      fontFamily: \"Poppins\",\n      marginLeft: '15px'\n    };\n  },\n  control: provided => {\n    return { ...provided,\n      borderColor: 'rgb(221,223,231)',\n      height: '45px'\n    };\n  }\n};\nexport default function SignupForm() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      novalidate: true,\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            className: \"sr-only\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              border: errors.name ? '1px solid red' : ''\n            },\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            className: \"form-control\",\n            placeholder: \"Full name\",\n            ref: register({\n              required: true,\n              validate: value => value.length > 4 && value.length < 30\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), errors.name && errors.name.type === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: \"* This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 72\n        }, this), errors.name && errors.name.type === \"validate\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: \"* Length must be from 4-30 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            className: \"sr-only\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              border: errors.email ? '1px solid red' : ''\n            },\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email address\",\n            ref: register({\n              required: true,\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), errors.email && errors.name.type === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: \"* This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 73\n        }, this), errors.email && errors.name.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"input-error\",\n          children: \"* Your email does not meet the valid format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"password\",\n          className: \"sr-only\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          className: \"form-control\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"repassword\",\n          className: \"sr-only\",\n          children: \"Re-type Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"repassword\",\n          id: \"repassword\",\n          className: \"form-control\",\n          placeholder: \"Re-type password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        menuPortalTarget: document.body,\n        isClearable: true // onChange={this.handleSelectChange}\n        ,\n        options: options,\n        placeholder: \"Select your interest\",\n        styles: styles,\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"signup\",\n        id: \"signup\",\n        style: {\n          marginTop: \"30px\"\n        },\n        className: \"btn btn-block login-btn mb-4 hvr-grow\",\n        type: \"submit\",\n        value: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupForm, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/quantran/Desktop/Architecture_webservice_system/Frontend/src/Login/forms/signupform.js"],"names":["React","useState","useEffect","Component","Select","useForm","options","value","label","styles","option","provided","state","color","isSelected","backgroundColor","singleValue","marginLeft","fontSize","fontFamily","placeholder","fontWeight","control","borderColor","height","SignupForm","register","handleSubmit","errors","onSubmit","data","console","log","border","name","required","validate","length","type","email","pattern","document","body","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport Select from 'react-select';\nimport { useForm } from 'react-hook-form';\n\n\n\nconst options = [\n    { value: 'Computer Science', label: 'Computer Science'},\n    { value: 'Engineering', label: 'Engineering'},\n    { value: 'Design', label: 'Design'},\n    { value: 'Professional Communication', label: 'Professional Communication'},\n    { value: 'Fashion', label: 'Fashion'},\n    { value: 'International Business', label: 'International Business'},\n    { value: 'Human Resources', label: 'Human Resources'}\n];\n\nconst styles = {\n    option: (provided, state) => ({\n        ...provided,\n        color: state.isSelected ? 'white' : 'grey',\n        backgroundColor: state.isSelected ? 'rgb(30,30,46)' : 'white',\n        \"&:hover\": {\n            backgroundColor: '#d3d3d3'\n        }\n    }),\n    singleValue: provided => {\n        return {\n            ...provided,\n            marginLeft: '15px',\n            fontSize: 14,\n            fontFamily: 'Poppins',\n        }\n    },\n    placeholder: provided => {\n        return {\n            ...provided,\n            color: '#919aa3',\n            fontWeight: \"bold\",\n            fontSize: 14,\n            fontFamily: \"Poppins\",\n            marginLeft: '15px'\n        }\n    },\n    control: provided => {\n        return {\n            ...provided,\n            borderColor: 'rgb(221,223,231)',\n            height: '45px',\n        }\n    }\n};\n\nexport default function SignupForm() {\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => console.log(data)\n\n    return (\n        <div>\n            <form novalidate onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-group\">\n                    <div>\n                        <label for=\"name\" className=\"sr-only\">Email</label>\n                        <input \n                        style={{ border: errors.name ? '1px solid red' : '' }}\n                        type=\"text\" \n                        name=\"name\" \n                        id=\"name\" \n                        className=\"form-control\" \n                        placeholder=\"Full name\"\n                        ref={register({ \n                            required: true,\n                            validate: value => value.length > 4 && value.length < 30\n                        })}\n                        ></input>\n                    </div>\n                    {errors.name && errors.name.type === \"required\" && <p className=\"input-error\">* This field is required</p>}\n                    {errors.name && errors.name.type === \"validate\" && <p className=\"input-error\">* Length must be from 4-30 characters</p>}\n                </div>\n                <div className=\"form-group\">\n                    <div>\n                        <label for=\"email\" className=\"sr-only\">Email</label>\n                        <input \n                        style={{ border: errors.email ? '1px solid red' : '' }}\n                        type=\"email\" \n                        name=\"email\" \n                        id=\"email\" \n                        className=\"form-control\" \n                        placeholder=\"Email address\"\n                        ref={register({ \n                            required: true,\n                            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                        })}\n                        ></input>\n                    </div>\n                    {errors.email && errors.name.type === 'required' && <p className=\"input-error\">* This field is required</p>}\n                    {errors.email && errors.name.type === 'pattern' && <p className=\"input-error\">* Your email does not meet the valid format</p>}\n                </div>\n                <div className=\"form-group mb-4\">\n                    <label for=\"password\" className=\"sr-only\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\"></input>\n                </div>\n                <div className=\"form-group mb-4\">\n                    <label for=\"repassword\" className=\"sr-only\">Re-type Password</label>\n                    <input type=\"password\" name=\"repassword\" id=\"repassword\" className=\"form-control\" placeholder=\"Re-type password\"></input>\n                </div>\n                <Select\n                    menuPortalTarget = {document.body}\n                    isClearable\n                    // onChange={this.handleSelectChange}\n                    options={options}\n                    placeholder=\"Select your interest\"\n                    styles={styles}\n                    value=\"\"\n                />\n                \n                <input name=\"signup\" id=\"signup\" style={{marginTop: \"30px\"}}className=\"btn btn-block login-btn mb-4 hvr-grow\" type=\"submit\" value=\"Signup\"></input>\n            </form>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}